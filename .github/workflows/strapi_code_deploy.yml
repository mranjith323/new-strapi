name: CI/CD workflow to deploy Strapi app (Code Deploy)

on:
  push:
    branches: [ master ]
    inputs:
      action:
        description: 'Action to perform (apply or destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

jobs:
  Code-deploy:
    name: 'Terraform Apply or Destroy'
    runs-on: ubuntu-latest

    env:
      AWS_REGION: 'us-east-2'
      TF_VERSION: '1.0.0'
      TF_WORKING_DIR: 'terraform/deploy/'

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: 'Configure AWS Credentials'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 'Initialize Terraform'
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform init

    - name: 'Terraform Format Check'
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform fmt -check

    - name: 'Terraform Validate'
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform validate

    - name: 'Terraform Plan'
      id: plan
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform plan

    - name: 'Terraform Apply'
      if: github.event.inputs.action == 'apply'
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform apply -auto-approve

    - name: 'Terraform Destroy'
      if: github.event.inputs.action == 'destroy'
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform destroy -auto-approve
